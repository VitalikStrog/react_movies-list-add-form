{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","re","NewMovie","state","isFormValid","isImgUrlValid","isImdbUrlValid","isUrlValid","urlType","imgTest","test","imdbTest","setState","submitForm","props","addMovie","changeHandler","content","input","this","onSubmit","e","preventDefault","required","type","placeholder","value","onChange","target","classNames","disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2403859.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\n\nconst re = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\ntype Props = {\n  addMovie(movie: Movie): void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  isFormValid: boolean;\n  isImgUrlValid: boolean;\n  isImdbUrlValid: boolean;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isFormValid: true,\n    isImgUrlValid: true,\n    isImdbUrlValid: true,\n  };\n\n  isUrlValid = (urlType?: 'imgUrl' | 'imdbUrl') => {\n    const { imgUrl, imdbUrl } = this.state;\n    const imgTest = re.test(imgUrl);\n    const imdbTest = re.test(imdbUrl);\n\n    switch (urlType) {\n      case 'imgUrl':\n        this.setState({ isImgUrlValid: imgTest, isFormValid: imgTest });\n        break;\n      case 'imdbUrl':\n        this.setState({ isImdbUrlValid: imdbTest, isFormValid: imdbTest });\n        break;\n      default:\n        break;\n    }\n\n    return imgTest && imdbTest;\n  };\n\n  submitForm = () => {\n    const {\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n    } = this.state;\n\n    this.setState({ isFormValid: this.isUrlValid() });\n\n    if (this.isUrlValid()) {\n      this.props.addMovie({\n        title,\n        description,\n        imdbId,\n        imdbUrl,\n        imgUrl,\n      });\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        isFormValid: true,\n        isImgUrlValid: true,\n        isImdbUrlValid: true,\n      });\n    }\n  };\n\n  changeHandler = (content: string, input: 'imgUrl' | 'imdbUrl') => {\n    switch (input) {\n      case 'imdbUrl':\n        this.setState({ imdbUrl: content });\n        this.isUrlValid('imdbUrl');\n        break;\n      case 'imgUrl':\n        this.setState({ imgUrl: content });\n        this.isUrlValid('imgUrl');\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n      isFormValid,\n      isImgUrlValid,\n      isImdbUrlValid,\n    } = this.state;\n\n    return (\n      <form\n        className=\"newMovie-form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.submitForm();\n        }}\n      >\n        <input\n          className=\"newMovie-form__element newMovie-form__input\"\n          required\n          type=\"text\"\n          placeholder=\"Enter title\"\n          value={title}\n          onChange={(e) => this.setState({ title: e.target.value })}\n        />\n        <textarea\n          className=\"newMovie-form__textarea newMovie-form__element\"\n          placeholder=\"Enter description\"\n          value={description}\n          onChange={(e) => this.setState({ description: e.target.value })}\n        />\n        <div className=\"input-set\">\n          <input\n            className={classNames({\n              'newMovie-form__input': true,\n              'newMovie-form__element': true,\n              'newMovie-form__input--error': !isImgUrlValid,\n            })}\n            required\n            type=\"text\"\n            placeholder=\"Enter URL of image\"\n            value={imgUrl}\n            onChange={(e) => this.changeHandler(e.target.value, 'imgUrl')}\n          />\n          {!isImgUrlValid && (<span className=\"error-message\">Wrong format!</span>)}\n        </div>\n        <div className=\"input-set\">\n          <input\n            className={classNames({\n              'newMovie-form__input': true,\n              'newMovie-form__element': true,\n              'newMovie-form__input--error': !isImdbUrlValid,\n            })}\n            required\n            type=\"text\"\n            placeholder=\"Enter URL of IMDB\"\n            value={imdbUrl}\n            onChange={(e) => this.changeHandler(e.target.value, 'imdbUrl')}\n          />\n          {!isImdbUrlValid && (<span className=\"error-message\">Wrong format!</span>)}\n        </div>\n        <input\n          className=\"newMovie-form__input newMovie-form__element\"\n          required\n          type=\"text\"\n          placeholder=\"Enter IMDB ID\"\n          value={imdbId}\n          onChange={(e) => this.setState({ imdbId: e.target.value })}\n        />\n        <button\n          className=\"submit-button\"\n          disabled={!isFormValid}\n          type=\"submit\"\n        >\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}